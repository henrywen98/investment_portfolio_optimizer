[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "maxsharpe-portfolio"
version = "1.0.0"
description = "A Python tool for building Max Sharpe Ratio portfolios with support for CN and US markets"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Henry Wen", email = "henrywen98@example.com"}
]
maintainers = [
    {name = "Henry Wen", email = "henrywen98@example.com"}
]
keywords = [
    "portfolio", 
    "optimization", 
    "sharpe-ratio", 
    "finance", 
    "investment", 
    "quantitative",
    "stocks",
    "china",
    "us-market"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Mathematics",
]
requires-python = ">=3.8"
dependencies = [
    "pandas>=1.5",
    "numpy>=1.21",
    "scipy>=1.7",
    "pandas-market-calendars>=4.3",
    "PyPortfolioOpt>=1.5.5",
    "akshare>=1.12.0",
    "yfinance>=0.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=5.0",
    "mypy>=1.0",
]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
]

[project.urls]
Homepage = "https://github.com/henrywen98/investment_portfolio_optimizer"
Repository = "https://github.com/henrywen98/investment_portfolio_optimizer.git"
Issues = "https://github.com/henrywen98/investment_portfolio_optimizer/issues"
Documentation = "https://github.com/henrywen98/investment_portfolio_optimizer#readme"

[project.scripts]
maxsharpe = "portfolio:main"

[tool.setuptools]
packages = ["maxsharpe"]

[tool.setuptools.package-dir]
maxsharpe = "."

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["maxsharpe"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "setup.py",
    "*/site-packages/*",
    ".venv/*",
    "venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
